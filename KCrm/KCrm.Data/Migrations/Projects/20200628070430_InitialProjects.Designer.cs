// <auto-generated />
using System;
using KCrm.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KCrm.Data.Migrations.Projects
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20200628070430_InitialProjects")]
    partial class InitialProjects
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("project")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("KCrm.Core.Entity.Projects.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .HasColumnName("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnName("deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(8096)")
                        .HasMaxLength(8096)
                        .IsUnicode(true);

                    b.Property<DateTime?>("EndDateTimeUtc")
                        .HasColumnName("end_date_time_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(true);

                    b.Property<DateTime?>("PlanedEndDateTimeUtc")
                        .HasColumnName("planed_end_date_time_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ProjectType")
                        .IsRequired()
                        .HasColumnName("project_type")
                        .HasColumnType("text")
                        .IsUnicode(true);

                    b.Property<DateTime?>("StartDateTimeUtc")
                        .HasColumnName("start_date_time_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Updated")
                        .HasColumnName("updated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id")
                        .HasName("pk_projects");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("ix_projects_name");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("KCrm.Core.Entity.Projects.ProjectHasTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnName("project_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnName("tag_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_project_has_tags");

                    b.HasIndex("TagId", "ProjectId")
                        .IsUnique()
                        .HasName("ix_project_has_tags_tag_id_project_id");

                    b.ToTable("project_has_tags");
                });

            modelBuilder.Entity("KCrm.Core.Entity.Projects.ProjectHasUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnName("project_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uuid");

                    b.Property<string>("UserRoleType")
                        .IsRequired()
                        .HasColumnName("user_role_type")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_project_has_users");

                    b.HasIndex("ProjectId", "UserId")
                        .IsUnique()
                        .HasName("ix_project_has_users_project_id_user_id");

                    b.ToTable("project_has_users");
                });
#pragma warning restore 612, 618
        }
    }
}
